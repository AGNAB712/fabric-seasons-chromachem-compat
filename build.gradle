plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
	maven { url = 'https://maven.minecraftforge.net/' }
	maven { url = 'https://maven.parchmentmc.org' }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//Fabric seasons
	modImplementation "maven.modrinth:KJe6y9Eu:${project.fabric_seasons_version}"
	//Nature's Spirit
	modImplementation "maven.modrinth:WBvnqHfV:${project.natures_spirit_version}"
	//Terrablender
	modLocalRuntime "maven.modrinth:terrablender:${project.terrablender_version}"
	//EMI
	modLocalRuntime "maven.modrinth:emi:1.1.18+1.21.1+fabric"
	//Mod menu
	modLocalRuntime "maven.modrinth:modmenu:11.0.3"
	//Sodium
	modLocalRuntime "maven.modrinth:sodium:mc1.21.1-0.6.5-fabric"
	//Jade
	modLocalRuntime "maven.modrinth:jade:15.9.2+fabric"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}